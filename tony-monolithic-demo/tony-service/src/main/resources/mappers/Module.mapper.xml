<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tony.db.dao.ModuleDao">
    <resultMap id="BaseResultMap" type="com.tony.db.po.Module">
        <id column="module_id" jdbcType="VARCHAR" property="moduleId"/>
        <result column="app_id" jdbcType="VARCHAR" property="appId"/>
        <result column="module_name" jdbcType="VARCHAR" property="moduleName"/>
        <result column="module_value" jdbcType="VARCHAR" property="moduleValue"/>
        <result column="module_type" jdbcType="SMALLINT" property="moduleType"/>
        <result column="module_group" jdbcType="VARCHAR" property="moduleGroup"/>
        <result column="module_description" jdbcType="VARCHAR" property="moduleDescription"/>
    </resultMap>
    <sql id="Base_Column_List">
        module_id, app_id, module_name, module_value, module_type, module_group, module_description,
    states
    </sql>
    <select id="selectByPk" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from public.tb_sys_module
        where module_id = #{moduleId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPk" parameterType="java.lang.String">
        delete
        from public.tb_sys_module
        where module_id = #{moduleId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByModuleType" parameterType="list">
        delete
        from public.tb_sys_module
        where module_type in (<foreach collection="list" item="type" separator=",">#{type,jdbcType=SMALLINT}</foreach> )
    </delete>
    <insert id="insert" parameterType="com.tony.db.po.Module">
        insert into public.tb_sys_module (module_id, app_id, module_name,
                                          module_value, module_type, module_group,
                                          module_description)
        values (#{moduleId,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR},
                #{moduleValue,jdbcType=VARCHAR}, #{moduleType,jdbcType=SMALLINT}, #{moduleGroup,jdbcType=VARCHAR},
                #{moduleDescription,jdbcType=VARCHAR})
    </insert>
    <insert id="insertDynamic" parameterType="com.tony.db.po.Module">
        insert into public.tb_sys_module
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="!@kotlin.text.StringsKt@isBlank(moduleId)">
                module_id,
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(appId)">
                app_id,
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleName)">
                module_name,
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleValue)">
                module_value,
            </if>
            <if test="moduleType != null">
                module_type,
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleGroup)">
                module_group,
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleDescription)">
                module_description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="!@kotlin.text.StringsKt@isBlank(moduleId)">
                #{moduleId,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(appId)">
                #{appId,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleName)">
                #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleValue)">
                #{moduleValue,jdbcType=VARCHAR},
            </if>
            <if test="moduleType != null">
                #{moduleType,jdbcType=SMALLINT},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleGroup)">
                #{moduleGroup,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleDescription)">
                #{moduleDescription,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPkDynamic" parameterType="com.tony.db.po.Module">
        update public.tb_sys_module
        <set>
            <if test="!@kotlin.text.StringsKt@isBlank(appId)">
                app_id = #{appId,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleName)">
                module_name = #{moduleName,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleValue)">
                module_value = #{moduleValue,jdbcType=VARCHAR},
            </if>
            <if test="moduleType != null">
                module_type = #{moduleType,jdbcType=SMALLINT},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleGroup)">
                module_group = #{moduleGroup,jdbcType=VARCHAR},
            </if>
            <if test="!@kotlin.text.StringsKt@isBlank(moduleDescription)">
                module_description = #{moduleDescription,jdbcType=VARCHAR},
            </if>
        </set>
        where module_id = #{moduleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPk" parameterType="com.tony.db.po.Module">
        update public.tb_sys_module
        set app_id             = #{appId,jdbcType=VARCHAR},
            module_name        = #{moduleName,jdbcType=VARCHAR},
            module_value       = #{moduleValue,jdbcType=VARCHAR},
            module_type        = #{moduleType,jdbcType=SMALLINT},
            module_group       = #{moduleGroup,jdbcType=VARCHAR},
            module_description = #{moduleDescription,jdbcType=VARCHAR}
        where module_id = #{moduleId,jdbcType=VARCHAR}
    </update>
    <select id="selectAll" resultMap="BaseResultMap">
        select module_id,
               app_id,
               module_name,
               module_value,
               module_type,
               module_group,
               module_description
        from public.tb_sys_module
    </select>
    <select id="selectModulesByUserIdAndAppId" parameterType="hashMap" resultMap="BaseResultMap">
        select m.module_id,
        m.app_id,
        m.module_name,
        m.module_value,
        m.module_type,
        m.module_group,
        m.module_description
        from tb_sys_user_role ur
        join tb_sys_role r on ur.role_id = r.role_id
        join tb_sys_role_module rm on r.role_id = rm.role_id
        join tb_sys_module m on rm.module_id = m.module_id
        where ur.user_id = #{userId,jdbcType=VARCHAR}
        and m.app_id = #{appId,jdbcType=VARCHAR}
        and m.module_type in (<foreach collection="types" item="type" separator=",">#{type,jdbcType=SMALLINT}</foreach> )
        order by m.module_id;
    </select>
</mapper>
